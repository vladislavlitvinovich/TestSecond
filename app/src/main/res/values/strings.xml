<resources>
    <string name="app_name">Diploma</string>
    <string name="lecture1">Системы контроля версий</string>
    <string name="lecture2">Основы Git</string>
    <string name="lecture3">Ветвления в Git</string>
    <string name="lecture4">GitHub</string>
    <string name="lecture_mini_content1">В лекции будет рассмотрена концепция систем контроля версий и их роль в разработке программного обеспечения. Участники узнают о преимуществах использования систем контроля версий, таких как отслеживание изменений, возможность отката к предыдущим версиям и совместная работа над проектом.</string>
    <string name="lecture_mini_content2">В лекции будут изучены основы системы контроля версий Git, включая установку и настройку Git, базовые команды для работы с репозиторием, такие как commit, push и pull, а также создание и клонирование репозиториев.</string>
    <string name="lecture_mini_content3">В лекции будет рассмотрена концепция ветвления в системе контроля версий Git и ее роль в разработке программного обеспечения. Участники узнают, как создавать и удалять ветки, объединять изменения из разных веток, разрешать конфликты и использовать ветки для тестирования и отладки кода.</string>
    <string name="lecture_mini_content4">В лекции будет рассмотрен сервис GitHub и его роль в совместной работе над проектами с использованием системы контроля версий Git. Участники узнают, как создавать и настроить аккаунт на GitHub, создавать и клонировать репозитории, отправлять изменения в репозиторий, создавать и управлять задачами и багами с помощью системы отслеживания проблем, а также использовать GitHub для публикации и совместного использования кода.</string>
    <string name="lecture_content">Системы контроля версий (VCS, Version Control System) - это программные средства, предназначенные для отслеживания изменений в наборе файлов или кода программы в течение времени. Они позволяют разработчикам сохранять разные версии своего проекта, откатываться к предыдущим версиям, сравнивать изменения между версиями и совместно работать над одним проектом, не создавая конфликтов.Системы контроля версий можно разделить на две основные категории: централизованные и распределенные.Централизованные системы контроля версий (CVCS, Centralized Version Control System) предполагают наличие единого центрального репозитория, который хранит все версии проекта и является единственной точкой взаимодействия для всех разработчиков. Клиенты CVCS синхронизируются с центральным репозиторием, получая из него обновления и отправляя в него свои изменения. Примерами CVCS являются Subversion (SVN) и Perforce.Распределенные системы контроля версий (DVCS, Distributed Version Control System) не имеют единого центрального репозитория, а предоставляют каждому разработчику полную копию всего репозитория, включая все версии и историю изменений. Разработчики могут работать над своей копией репозитория независимо друг от друга, а затем синхронизировать свои изменения с другими копиями репозитория. Это позволяет работать в автономном режиме, без подключения к сети, и упрощает совместную работу над большими и сложными проектами. Примерами DVCS являются Git, Mercurial и Bazaar. Системы контроля версий являются неотъемлемой частью современного программного обеспечения и используются во всех сферах разработки, от веб-сайтов и мобильных приложений до игр и систем искусственного интеллекта. Они помогают разработчикам эффективно управлять своими проектами, сохранять историю изменений и совместно работать над одним кодом.</string>
    <string name="practice_content">Какой из следующих инструментов относится к централизованным системам контроля версий (CVCS)?</string>
</resources>